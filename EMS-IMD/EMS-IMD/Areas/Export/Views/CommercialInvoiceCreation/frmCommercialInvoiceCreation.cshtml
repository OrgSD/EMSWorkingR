@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/AdminLTE/plugins/jQuery/jquery-2.2.3.min.js"></script>
<link href="~/Content/CSS/InputText.css" rel="stylesheet" />
<script type="text/javascript">
    //var gridInput = 0;

    $(document).ready(function () {

        //$("input#btn").click(function () {
        //    $("input#txt").hide();
        //});

    

        EventPermission();
        $('#btnReset').click(function () {

            //location.reload();
          /*
            ResetData();

            

            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            $('#DetailGrid').data('kendoGrid').dataSource.filter([]);
            $('#DetailGrid').data('kendoGrid').dataSource.data([]);



            alert("Okay");

            $("#Status").val("Active");
            $("Status").val("Active");
            $(".ddlBox").val("Active");
            */
            ResetData();
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            $('#DetailGrid').data('kendoGrid').dataSource.filter([]);
            $('#DetailGrid').data('kendoGrid').dataSource.data([]);
            
            
        });

        var dataitem = {};


        $('#btnSearch').click(function () {
            //$('#MainGrid').data('kendoGrid').dataSource.filter([]);
            //$('#MainGrid').data('kendoGrid').dataSource.data([]);

            //$('#DetailGrid').data('kendoGrid').dataSource.filter([]);
            //$('#DetailGrid').data('kendoGrid').dataSource.data([]);

            PopupWindow.open();

            $.ajax({
                url: '/CommercialInvoiceCreation/GetSearch',
                method: 'get',
                data: 'json',
                success: function (data) {
                    if (data != "") {
                        $('#PopupWindowGrid').data('kendoGrid').dataSource.data(data);
                        //$('#MainGrid').data('kendoGrid').dataSource.data(data);
                    }
                    else {
                        PopupWindow.close();
                        AcknowledgeMsg();
                    }

                },
                error: function () {
                    alert('Error occured!');
                },
                //complete: function () { },
            });
        });

        //Initializing Main page details Kendo Grid Colums
        var PopupGrid = $('#PopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "CommInvoMSTSlno",
                        fields: {
                            BuyerCode: { type: "string" },
                            BuyerName: { type: "string" },
 

                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            scrollable: true,
            sortable: true,
            filterable: true,
            editable: false,
            selectable: "row",
            //selectable: "multiple",
            toolbar: [{ template: "<input type='text' id='txtPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            navigatable: true,
            height: 430,
            // groupable: true,
            groupable: { messages: { empty: "Custom message text" } },
            columnMenu: true,
            reorderable: true,
            resizable: true,
            columns: [
                 { field: "CommInvoMSTSlno", hidden: true, title: "CommInvoMSTSlno", width: 80 },
                 { field: "CommInvoDTLSlno", hidden: true, title: "CommInvoDTLSlno", width: 80 },
                 { field: "BuyerCode", title: "BuyerCode", width: 50 },
                 { field: "BuyerName", title: "BuyerName", width:  50},
                 { field: "CommInvoiceNo", title: "ComInvNo", width: 60 },
                 { field: "CommInvoiceDate", title: "ComInv.No", width: 40 },
                 { field: "Status", title: "Status", width: 40 },
                 { field: "NetInvoiceAmount", title: "NetInvoiceAmount", width: 60 },
                 //{ field: "ProformaInvoiceNo",hidden: true, title: "ProformaInvoiceNo", width: 80 },
                 //{ field: "ProformaInvoiceDate",hidden: true, title: "ProformaInvoiceDate", width: 80 },
                 //{ field: "PackingList",hidden: true, title: "PackingList", width: 80 },
                 //{ field: "PackingListDate",hidden: true, title: "PackingListDate", width: 100 },
                 //{ field: "PONo",hidden: true, title: "PONo", width: 80 },
                 //{ field: "PODate",hidden: true, title: "PODate", width: 80 },
                 //{ field: "SapSoNo", title: "SapSoNo", width: 80, hidden: true },
                 //{ field: "SapSoDate", title: "SapSoDate", width: 100, hidden: true },
                 //{ field: "DestinationPort", title: "DestinationPort", width: 100, hidden: true },
                 //{ field: "LoadingPort", title: "LoadingPort", width: 80, hidden: true },
                 //{ field: "ModeOfShipment", title: "ModeOfShipment", width: 80 },
                 //{ field: "CommInvoiceProdSlno", title: "CommInvoiceProdSlno", width: 80, hidden: true },
                 //{ field: "OrderQtyInPack", title: "OrderQtyInPack", width: 80, hidden: true },
                 //{ field: "OrderQtyInPcs", title: "OrderQtyInPcs", width: 80, hidden: true },
                 //{ field: "InvoiceQtyInPack", title: "InvoiceQtyInPack", width: 80, hidden: true },
                 //{ field: "InvoiceQtyInPcs", title: "InvoiceQtyInPcs", width: 80, hidden: true },
                 //{ field: "PricePerPack", title: "PricePerPack", width: 80, hidden: true },
                 //{ field: "TotalAmount", title: "TotalAmount", width: 80, hidden: true },
                 //{ field: "Currency", title: "Currency", width: 80, hidden: true }
            ]

        }).data('kendoGrid');



        $("#PopupWindowGrid").dblclick(function () {
            
            var gridData = $("#PopupWindowGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row
            $("#BuyerCode").val(selectedItem.BuyerCode);
            $("#BuyerName").val(selectedItem.BuyerName);
            $("#CommInvoiceNo").val(selectedItem.CommInvoiceNo);
            $("#CommInvoiceDate").val(selectedItem.CommInvoiceDate);
            $("#Status").val(selectedItem.Status);
            ////alert(selectedItem.Status);
            $("#NetInvoiceAmount").val(selectedItem.NetInvoiceAmount);


            //var grid = $(this).data('kendoGrid');
            //var selectRow = grid.dataItem(grid.select());
            //$(".ddlBox").val(selectedItem.Status);
            loadPackingDetail();
            loadProductGrid();
            PopupWindow.close();
            
            });





        function loadPackingDetail() {
            $.ajax({
                url: '/CommercialInvoiceCreation/GetPackingSearch',
                method: 'get',
                contentType: 'application/json; charset=utf-8',
                //data: JSON.stringify({ doctorId: doctorId }),
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0) {
                        $('#MainGrid').data('kendoGrid').dataSource.data(data);
                        //$('#SUStatus').val(1);
                    }
                    else {
                        $("#MainGrid").find('.k-grid-content tbody').append('<tr class="kendo-data-row"><td style="text-align:center; color: red"><b>No Record Found!</b></td></tr>');
                    }
                },
                error: function () {

                }
            });
        }

        function loadProductGrid() {
            $.ajax({
                url: '/CommercialInvoiceCreation/GetProductSearch',
                method: 'get',
                contentType: 'application/json;charset=utf-8',
                //data: JSON.stringify({ doctorId: doctorId }),
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0) {
                        $("#DetailGrid").data("kendoGrid").dataSource.data(data);
                        $('#btnDelete').attr('disabled', true);
                    }
                    else {
                        $("#DetailGrid").find('.k-grid-content tbody').append('<tr class="kendo-data-row"><td style="text-align:center; color: red"><b>No Record Found!</b></td></tr>');
                        //$('#btnDelete').attr('disabled', false);
                    }
                },
                error: function () {
                    $("#DetailGrid").find('.k-grid-content tbody').append('<tr class="kendo-data-row"><td style="text-align:center; color: red"><b>No Record Found!</b></td></tr>');
                }
            })
        }
     


           
        //Produc Name twise Filter table row
        $("#txtPopupInput").keyup(function () {
            var val = $(this).val();
            $("#PopupWindowGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                     { field: "BankCode", operator: "contains", value: val },
                     { field: "BankName", operator: "contains", value: val },
                    { field: "BankAddress", operator: "contains", value: val },
                    { field: "Status", title: "Status", width: 80 }
                ]
            });
        });






        $('#btnView').click(function () {
            var srt = "";

            var data = $("#MainGrid").data("kendoGrid").dataSource._data;

            if (data.length > 1) {
                for (var i = 1; i < data.length; i++) {

                    if (data.Length + 1 == i) {
                        srt = srt + data[i].PackingList;
                    }
                    else {
                        srt = srt + data[i].PackingList + ",";

                    }

                }
            }
            if (data.Length = 1) {
                srt = srt + data[0].PackingList;

            }

            var PackNo = JSON.stringify(srt);

            //alert(PackNo);

            $.ajax({
                url: '/CommercialInvoiceCreation/GetProduct',
                data: JSON.stringify({ PackNo: PackNo }),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (data) {
                    if (data != "") {
                        $('#DetailGrid').data('kendoGrid').dataSource.data(data);
                    }
                    else {
                        PopupWindow.close();
                        AcknowledgeMsg();
                    }

                },
                error: function () {
                    alert('Error occured!');
                },
                //complete: function () { },
            });

        });


        //************************* Handling DELETE event for DELETING ROW from DETAIL GRID ******************************//
        var dataitem = {};
        var GridName = null;

        function handleDeleteMain(event) {
            dataitem = MainGrid.dataItem($(event.currentTarget).closest("tr"));
            RemoveConfirmationMain.open();
        };

        var RemoveConfirmationMain = $('#RemoveConfirmationMainWindow').kendoWindow({
            width: "400px",
            height: "100px",
            draggable: false,
            modal: true,
            title: "Do You Want To Remove This Record?"
        }).data("kendoWindow").center();


        ////Handling Yes button click for master Delete Confirmation[Yes Button]
        $('#btnRemoveConfirmationMainYes').click(function () {
            MainGrid.dataSource.remove(dataitem);
            RemoveConfirmationMain.close();
            OperationMsg();
        });

        //Handling No button click for grid row Delete Confirmation[No Button]
        $('#btnRemoveConfirmationMainNo').click(function () {
            dataitem = {};
            RemoveConfirmationMain.close();
        });




        //Initializing Main page details Kendo Grid Colums
        var MainGrid = $('#MainGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "CommInvoMSTSlno",
                        fields: {
                            CommInvoDTLSlno: { type: "number", validation: { required: false, min: 1 } },
                            CommInvoMSTSlno: { type: "number", validation: { required: false, min: 1 } },
                            PackingList: { type: "string", defaultValue: "Press (F9)"},
                            PackingListDate: { type: "string", editable: true },
                            ProformaInvoiceNo: { type: "string", editable: true },
                            ProformaInvoiceDate: { type: "string", editable: true },
                            PONo: { type: "string", editable: true },
                            PODate: { type: "string", editable: true },
                            SapSoNo: { type: "string", editable: true },
                            SapSoDate: { type: "string", editable: true },
                            //PackingListDate: { type: "date", editable: true },
                            //Status: { type: "string", editable: true, validation: { required: true }, defaultValue: "New" },
                            DestinationPort: { type: "string", editable: true, },
                            LoadingPort: { type: "string", editable: true },
                            ModeOfShipment: { type: "string", editable: true }

                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            scrollable: true,
            sortable: true,
            filterable: true,
            editable: false,
            edit: function (e) {
                $("[name='PackingList']", e.container).keyup(function (event) {
                    if (event.keyCode == 120) {
                        PopUpPackingList($("#BuyerCode").val());
                        PackingPopupWindow.open();
                    }
                });
            },
            selectable: "row",
            //selectable: "multiple",
            //toolbar: [{ template: "<input type='text' id='txtPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            toolbar: [{ text: "Add Items", className: "btnMain", style: "float:left", imageClass: "k-icon k-add", attributes: { "class": "k-grid-toolbar k-button" } }],
            navigatable: true,
            height: 250,
            // groupable: true,
            groupable: { messages: { empty: "Select Packing List :", style: "font-weight:bold" } },
            columnMenu: true,
            reorderable: true,
            resizable: true,
            columns: [
                 { field: "CommInvoDTLSlno", hidden: true, title: "CommInvoDTLSlno", width: 80 },
                 //{ field: "PackingDate", title: "Packing Date", width: 80, format: "{0:dd/MM/yyyy}" },
                 { field: "CommInvoMSTSlno", hidden: true, title: "CommInvoMSTSlno", width: 80 },
                 { field: "PackingList", title: "packing list", width: 40 },
                 { field: "PackingListDate", title: "Packing  Date", width:50 },
                 { field: "ProformaInvoiceNo", title: "ProInvNo", width: 50 },
                 { field: "ProformaInvoiceDate", title: "ProInvDate", width: 50 },
                 { field: "PONo", title: "PONo", width: 50},
                 { field: "PODate", title: "PODate", width: 50, },
                 { field: "SapSoNo", title: "SAPSONo", hidden: false, width: 50 },
                 { field: "SapSoDate", title: "SAP SO Date", hidden: false, width: 50 },
                 { field: "DestinationPort", hidden: true, title: "Destination Port", width: 50 },
                 //{ field: "DestinationPort", hidden: false, title: "Destination Port", width: 80, editor: DestinationPort, },
                 { field: "LoadingPort", hidden: true, title: "Loading Port", width: 50 },
                 { field: "ModeOfShipment", hidden: true, title: "Mode Of Shipment", width: 50 },

            { command: [{ name: "DeletedRow", text: "Remove", imageClass: "k-icon k-i-close", click: handleDeleteMain }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove", width: "50px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center" } }

            ]

        }).data('kendoGrid');

        function PopUpPackingList(BuyerCode) {

            $.ajax({
                url: "/CommercialInvoiceCreation/GetPacking",
                type: 'Post',
                data: "BuyerCode=" + BuyerCode,
                // data: JSON.stringify({ "BuyerCode": BuyerCode }),
                dataType: "JSON",
                success: function (data) {
                    $("#PackingPopupWindowGrid").data("kendoGrid").dataSource.data(data);
                }
            });

        }

        //Populate Evening Location Grid Information
        $("#PackingPopupWindowGrid").dblclick(function () {
            var gridData = $("#PackingPopupWindowGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row
            var gridCiItem = $("#MainGrid").data("kendoGrid");
            //$("#BuyerCode").val(gridCiItem.BuyerCode);
            var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
            selectedCiigItem.set("PackingList", selectedItem.PackingList);
            selectedCiigItem.set("PackingListDate", selectedItem.PackingListDate);
            selectedCiigItem.set("ProformaInvoiceNo", selectedItem.ProformaInvoiceNo);
            //alert(selectedCiigItem.set("ProformaInvoiceNo", selectedItem.ProformaInvoiceNo));
            selectedCiigItem.set("ProformaInvoiceDate", selectedItem.ProformaInvoiceDate);
            selectedCiigItem.set("PONo", selectedItem.PONo);
            selectedCiigItem.set("PODate", selectedItem.PODate);
            selectedCiigItem.set("SapSoNo", selectedItem.SapSoNo);
            selectedCiigItem.set("SapSoDate", selectedItem.SapSoDate);
            selectedCiigItem.set("DestinationPort", selectedItem.DestinationPort);
            selectedCiigItem.set("LoadingPort", selectedItem.LoadingPort);
            selectedCiigItem.set("ModeOfShipment", selectedItem.ModeOfShipment);
            //var cell = $('#MainGrid').find('tbody tr:eq(0) td:eq(0)'); // or different cell
            //$('#MainGrid').data('kendoGrid').editCell(cell);

            PackingPopupWindow.close();
        });

        //********************************************** Country POP UP Window ****************************************************

        //Function For Batch List Information Window
        var BuyerPopupWindow = $("#BuyerPopupWindow").kendoWindow({
            width: "70%",
            height: "70%",
            draggable: true,
            modal: true,
            title: "List Of Values."
        }).data("kendoWindow").center();


        //Open PopUp by pressing F9 key

        $("#BuyerName").on('keyup keypress keydown dblclick', function (e) {

            $.ajax({
                url: '/CommercialInvoiceCreation/GetBuyer',
                method: 'get',
                data: 'json',
                success: function (data) {
                    if (data != "") {
                        $('#BuyerPopupWindowGrid').data('kendoGrid').dataSource.data(data);
                    }
                    else {
                        //CountryPopupWindow.close();

                        AcknowledgeMsg();
                    }

                },
                error: function () {
                    alert('Error occured!');
                },
                //complete: function () { },
            });
            BuyerPopupWindow.open();


        });


        //Initializing Main page details Kendo Grid Colums
        var PopupGrid = $('#BuyerPopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "SoftwareID",
                        fields: {
                            BuyerCode: { type: "string", editable: true },
                            BuyerName: { type: "string", editable: true }
                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            scrollable: true,
            sortable: true,
            filterable: true,
            editable: false,
            selectable: "row",
            //selectable: "multiple",
            toolbar: [{ template: "<input type='text' id='txtBuyerPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            navigatable: true,
            height: 430,
            // groupable: true,
            groupable: { messages: { empty: "Custom message text" } },
            columnMenu: true,
            reorderable: true,
            resizable: true,
            columns: [
                 { field: "BuyerCode", title: "Buyer Code",  width: 80 },
                 { field: "BuyerName", title: "Buyer Name", width: 100 }
                 //{ field: "SHORT_NAME", title: "Short Name", width: 80 },
                 //{ field: "Status", title: "Status", width: 80 }

            ]

        }).data('kendoGrid');



        $('#BuyerPopupWindowGrid').dblclick(function () {
            var gridData = $("#BuyerPopupWindowGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select()));
            $("#BuyerCode").val(selectedItem.BuyerCode);
            $("#BuyerName").val(selectedItem.BuyerName);
            BuyerPopupWindow.close();
            //SetMasterData(selectRow);
            //$("#SUStatus").val(1);


        });

        //Produc Name twise Filter table row
        $("#txtBuyerPopupInput").keyup(function () {
            var val = $(this).val();
            $("#CountryPopupWindowGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                     { field: "BuyerCode", operator: "contains", value: val },
                     { field: "BuyerName", operator: "contains", value: val },
                    //{ field: "SHORT_NAME", operator: "contains", value: val }
                   // { field: "Status", title: "Status", width: 80 }
                ]
            });
        });


        function handleDetailDelete(event) {
            
            dataitem = DetailGrid.dataItem($(event.currentTarget).closest("tr"));
            RemoveConfirmationDetail.open();
        };

        var RemoveConfirmationDetail = $('#RemoveConfirmationDetailWindow').kendoWindow({
            width: "400px",
            height: "100px",
            draggable: false,
            modal: true,
            title: "Do You Want To Remove This Record?"
        }).data("kendoWindow").center();


        ////Handling Yes button click for master Delete Confirmation[Yes Button]
        $('#btnRemoveConfirmationDetailYes').click(function () {
            DetailGrid.dataSource.remove(dataitem);
            RemoveConfirmationDetail.close();
            OperationMsg();
        });

        //Handling No button click for grid row Delete Confirmation[No Button]
        $('#btnRemoveConfirmationDetailNo').click(function () {
            dataitem = {};
            RemoveConfirmationDetail.close();
        });

        $("#TotalAmtPack").kendoNumericTextBox({
            format: "n",
            decimals: 3
        });

        $("#TotalAmtBDT").kendoNumericTextBox({
            format: "n",
            decimals: 3
        });
        $(".target").hide();
        //Initializing Main page details Kendo Grid Colums
        var DetailGrid = $('#DetailGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "CommInvoiceProdSlno",
                        fields: {
                            CommInvoiceProdSlno: { type: "string"},                         

                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            scrollable: true,
            sortable: true,
            filterable: true,
            editable: false,
            edit: function (e) {
                //----------
                $(".CalculationNeeded").unbind().change(function () {
                    var TotalAmtPack = 0.00;
                    var TotalAmtBDT = 0.00;
                    var PIGridDataSource = $("#DetailGrid").data("kendoGrid").dataSource;
                    var PIGridData = PIGridDataSource.data();
                    for (i = PIGridData.length - 1; i >= 0; i--) {
                        var Amount = parseFloat(PIGridData[i].TotalAmount);
                        var AmountBDT = parseFloat(PIGridData[i].TotalAmountBDT);

                        TotalAmtPack = TotalAmtPack + Amount;
                        TotalAmtBDT = TotalAmtBDT + AmountBDT;

                    }
                    var TotalAmtPackValue = $("#TotalAmtPack").data("kendoNumericTextBox");
                    TotalAmtPackValue.value(TotalAmtPack);

                    var TotalAmtBDTValue = $("#TotalAmtBDT").data("kendoNumericTextBox");
                    TotalAmtBDTValue.value(TotalAmtBDT);
                });
            },
            dataBound: function (e) {
                //var TotalPrice = 0.00;
                var TotalAmtPack = 0.00;
                var TotalAmtBDT = 0.00;
                var PIGridDataSource = $("#DetailGrid").data("kendoGrid").dataSource;
                var PIGridData = PIGridDataSource.data();
                for (i = PIGridData.length - 1; i >= 0; i--) {

                    var Amount = parseFloat(PIGridData[i].TotalAmount);
                    var AmountBDT = parseFloat(PIGridData[i].TotalAmountBDT);

                    TotalAmtPack = TotalAmtPack + Amount;
                    TotalAmtBDT = TotalAmtBDT + AmountBDT;
                }
                var TotalAmtPackValue = $("#TotalAmtPack").data("kendoNumericTextBox");
                TotalAmtPackValue.value(TotalAmtPack);


                var TotalAmtBDTValue = $("#TotalAmtBDT").data("kendoNumericTextBox");
                TotalAmtBDTValue.value(TotalAmtBDT);

            },
            save: function (e) {
                e.sender.refresh();
            },
            selectable: "row",
            //selectable: "multiple",
            //toolbar: [{ template: "<input type='text' id='txtPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            //toolbar: [{ text: "Add Items", className: "btnDetaile", style: "float:left", imageClass: "k-icon k-add" }],
            navigatable: true,
            height: 250,
            // groupable: true,
            groupable: { messages: { empty: "Product Details :" } },
            columnMenu: true,
            reorderable: true,
            resizable: true,
            columns: [
                { field: "CommInvoiceProdSlno", hidden: true, title: "CommInvoiceProdSlno.", width: 80 },
                { field: "CommInvoMSTSlno", hidden: true, title: "CommInvoMSTSlno", width: 80 },
                 { field: "ProductCode", title: "ProductCode", width: 50 },
                 { field: "OrderQtyInPack", title: "OrdQty", width: 50 },
                 { field: "OrderQtyInPcs",hidden: true, title: "OrQtyPc", width: 50 },
                 { field: "InvoiceQtyInPack", title: "InvQtyPk", width: 50 },
                 { field: "InvoiceQtyInPcs", hidden: true, title: "InvQtPc", width: 50 },
                 { field: "PackingQtyInPack", hidden: true, title: "PkQtyInPk", width: 50 },
                 { field: "PackingQtyInPcs", hidden: true, title: "PkQtyInPk", width: 50 },
                 { field: "PricePerPack", title: "PrcPerPk", width: 50 },
                 { field: "Currency", title: "Currency", width: 50 },
                 { field: "TotalAmount", title: "Tl. Amount", width: 50 ,attributes: { "class": "CalculationNeeded" }},
                 { field: "ConversionRate",hidden:true, title: "Cv.Rate", width: 50 },
                 { field: "TotalAmountBDT", hidden: true, title: "Tl.AmountBD", width: 50 },
                // { field: 'sumOfAllWeeks()', aggregates: 'sum', width: 50 },
                //{
                    //footerTemplate: function (data) {
                    //    return data['sumOfAllWeeks()'].sum;
                    //}, width: 50
                //},
            { command: [{ name: "DeletedRow", text: "Remove", imageClass: "k-icon k-i-close", click: handleDetailDelete }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remove", width: "50px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center;" } }

            ]

        }).data('kendoGrid');

        
    //dataSource.fetch(function () {
    //    return data['sumOfAllWeeks()'].sum;
    //        var results = dataSource.aggregates().TotalAmount;
    //        return data['sumOfAllWeeks()'].sum;
    //    });



        $(".btnMain").click(function (e) {

            AddRowToMainGrid();
            e.preventDefault();

        });


        //$(".btnDetaile").click(function () {

        //    AddRowToDetailGrid();

        //});

        function AddRowToMainGrid() {
            var addflag = 1; // For Row Add in Detail Grid using enter Key Press

            var grid = $("#MainGrid").data("kendoGrid");

            $("#MainGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
            var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
            var addData = dataSource.data();
            if (addData != null) { // For Add row when Exiting Data in Grid
                for (var i = 0; i < addData.length; i++) {
                    if (addData[i].val == "") {
                        addflag = 0;
                    }
                }
            }
            if (addflag == 1) {
                grid.addRow();
            }
        }


        //function AddRowToDetailGrid() {
        //    var addflag = 1; // For Row Add in Detail Grid using enter Key Press

        //    var grid = $("#DetailGrid").data("kendoGrid");

        //    $("#DetailGrid").data().kendoGrid.bind('dataBound', function () {
        //        this.element.find('tbody tr:first').addClass('k-state-selected');
        //    });
        //    var dataSource = $("#DetailGrid").data("kendoGrid").dataSource;
        //    var addData = dataSource.data();
        //    if (addData != null) { // For Add row when Exiting Data in Grid
        //        for (var i = 0; i < addData.length; i++) {
        //            if (addData[i].val == "") {
        //                addflag = 0;
        //            }
        //        }
        //    }
        //    if (addflag == 1) {
        //        grid.addRow();
        //    }
        //}



        //********************************************** Country POP UP Window ****************************************************

        //Function For Batch List Information Window
        var PackingPopupWindow = $("#PackingPopupWindow").kendoWindow({
            width: "70%",
            height: "70%",
            draggable: true,
            modal: true,
            title: "List Of Values."
        }).data("kendoWindow").center();





        //Initializing Main page details Kendo Grid Colums
        var PackingPopupWindowGrid = $('#PackingPopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "PackingList",
                        fields: {
                            CommInvoDTLSlno: { type: "number" },
                            CommInvoMSTSlno: { type: "number" },
                            PackingList: { type: "string" },
                            //PackingListDate: { type: "date", editable: true },
                            //ProformaInvoiceDate: { type: "date", editable: true },
                            //PODate: { type: "date", editable: true },
                            //SapSoDate: { type: "date", editable: true },

                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            scrollable: true,
            sortable: true,
            filterable: true,
            editable: false,
            selectable: "row",
            //selectable: "multiple",
            toolbar: [{ template: "<input type='text' id='txtPackinPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            navigatable: true,
            height: 430,
            // groupable: true,
            groupable: { messages: { empty: "Custom message text" } },
            columnMenu: true,
            reorderable: true,
            resizable: true,
            columns: [
                 { field: "CommInvoDTLSlno", hidden: true, title: "CommInvoDTLSlno", width: 80 },
                 { field: "CommInvoMSTSlno", hidden: true, title: "CommInvoMSTSlno", width: 80 },
                 { field: "PackingList", title: "PackingList.", width: 80 },
                 { field: "PackingListDate", title: "Packing Date" },
                 { field: "ProformaInvoiceNo", title: "ProfInvNo", width: 80 },
                 { field: "ProformaInvoiceDate", title: "ProfInvDate" },
                 { field: "PONo", title: "PO No", width: 80 },
                 { field: "PODate", title: "PO Date" },
                 { field: "SapSoNo", title: "SAP SO No", hidden: true, width: 80 },
                 { field: "SapSoDate", title: "SAP SO Date", hidden: true },
                 { field: "DestinationPort", hidden: true, title: "DestiPort", width: 80 },
                 { field: "LoadingPort", hidden: true, title: "Loading Port", width: 80 },
                 { field: "ModeOfShipment", hidden: true, title: "Mode Of Ship.", width: 80 },

            ]

        }).data('kendoGrid');





        function GridValidation1() {
            gridInput = 0;
            var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
            data = dataSource.data(); // Get Detail Grid Data
            if (dataSource.view().length > 0) {
                for (var i = data.length - 1; i >= 0; i--) {
                    if ((data[i].PackingList == "Press (F9)") || (data[i].PackingList == "")) {
                        gridInput = 1;
                    }

                }
            }
            else {
                gridInput = 1;
            }
        }

        var master = { "CommInvoMSTSlno": "", "CommInvoDTLSlno": "", "CommInvoiceNo": "", "CommInvoiceDate": "", "BuyerCode": "", "BuyerName": "", "Status": "", "NetInvoiceAmount": "", "packingList": [], "productList": [] };

        $('#btnSave').click(function () {

            GridValidation1();
            //var Input = InputValidation('CurrencyName');
            var Input =  InputValidation('BuyerName');
            if (Input == 0) {
                master.CommInvoiceNo = $('#CommInvoiceNo').val();
                master.CommInvoiceDate = $('#CommInvoiceDate').val();
                master.CommInvoMSTSlno = $('#CommInvoMSTSlno').val();
                master.CommInvoDTLSlno = $('#CommInvoDTLSlno').val();
                master.BuyerCode = $('#BuyerCode').val();
                master.BuyerName = $('#BuyerName').val();
                master.Status = $('#Status').val();
                master.NetInvoiceAmount = $('#NetInvoiceAmount').val();
                
                
                
                var MainGrid = $("#MainGrid").data("kendoGrid").dataSource;
                data = MainGrid.data();
                //alert(data)// Get Detail Grid Data
                master.packingList = [];

                if (MainGrid.hasChanges) {
                    for (var i = data.length - 1; i >= 0; i--) {
                        var detailPac = {};
                        detailPac.CommInvoDTLSlno = data[i].CommInvoDTLSlno;
                        detailPac.CommInvoMSTSlno = data[i].CommInvoMSTSlno;
                        detailPac.PackingList = data[i].PackingList;
                        detailPac.PackingListDate = data[i].PackingListDate;
                        detailPac.ProformaInvoiceNo = data[i].ProformaInvoiceNo;
                        detailPac.ProformaInvoiceDate = data[i].ProformaInvoiceDate;
                        detailPac.PONo = data[i].PONo;
                        detailPac.PODate = data[i].PODate;
                        detailPac.SapSoNo = data[i].SapSoNo;
                        //alert(detailPac.SapSoNo);
                        detailPac.SapSoDate = data[i].SapSoDate;
                        detailPac.ModeOfShipment = data[i].ModeOfShipment;
                        detailPac.DestinationPort = data[i].DestinationPort;
                        detailPac.LoadingPort = data[i].LoadingPort;
                        master.packingList.push(detailPac);

                        //var detailPac = { "CommInvoDTLSlno": "", "CommInvoMSTSlno": "", "CommInvoiceNo": "", "PackingList": "", "PackingListDate": "", "ProformaInvoiceNo": "", "ProformaInvoiceDate": "", "PONo": "", "PODate": "", "SapSoNo": "", "SapSoDate": "", "ModeOfShipment": "", "DestinationPort": "", "LoadingPort": "" };
                        //details = { "SLNo": "", "AreaCode": "", "AreaName": "", "Status": "" };
                        //}
                    }
                }

                
                var detailDataSource = $('#DetailGrid').data("kendoGrid").dataSource;
                var detailData = detailDataSource.data();
                master.productList = [];
                if (detailData.length > 0) {
                    for (var i = 0; i < detailData.length; i++) {
                        var detailProd = {};
                        detailProd.CommInvoMSTSlno = detailData[i].CommInvoMSTSlno;
                        detailProd.CommInvoiceProdSlno = detailData[i].CommInvoiceProdSlno;
                        detailProd.ProductCode = detailData[i].ProductCode;
                        //detailProd.PackingList = detailData[i].PackingList;
                        //detailProd.PackingListDate = detailData[i].PackingListDate;
                        detailProd.InvoiceQtyInPack = detailData[i].InvoiceQtyInPack;
                        detailProd.InvoiceQtyInPcs = detailData[i].InvoiceQtyInPcs;
                        detailProd.OrderQtyInPack = detailData[i].OrderQtyInPack;
                        detailProd.OrderQtyInPcs = detailData[i].OrderQtyInPcs;
                        //alert(OrderQtyInPcs)
                        //alert(detailProd.OrderQtyInPcs);

                        detailProd.PackingQtyInPack = detailData[i].PackingQtyInPack;
                        detailProd.PackingQtyInPcs = detailData[i].PackingQtyInPcs;
                        //alert(detailProd.PackingQtyInPcs);
                        detailProd.PricePerPack = detailData[i].PricePerPack;
                        detailProd.Currency = detailData[i].Currency;

                        detailProd.TotalAmount = detailData[i].TotalAmount;
                        detailProd.TotalAmountBDT = detailData[i].TotalAmountBDT;
                        detailProd.ConversionRate = detailData[i].ConversionRate;
                        master.productList.push(detailProd);
                    }
                }

                $.ajax({
                    url: '/CommercialInvoiceCreation/OperationsMode',
                    data:JSON.stringify(master),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        if (data.Status == "Yes") {
                            $("#CommInvoiceNo").val(data.ID);
                            OperationMsg(data.Mode);
                        }
                        else {
                            ErrorFrmServerMsg(data.Status);
                        }

                    },
                    error: function () { ErrorFrmClientMsg(); },
                    // complete: function () { CompletedMsg(); },
                }); //End of ajax call
              
            }

          

        });



    });
    

</script>



<div class="box-header with-border">
    @*Form Title*@
    <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4"> <div id="MessageText"></div></div>
    <div class="col-xs-0 col-sm-0 col-md-8 col-lg-8">
        <div style="text-align:right;">
            @*<button id="btnReset" class="btn btn btn-primary margin pull-right button" type="button"><i class="glyphicon glyphicon-refresh"></i>Reset</button>
                @*<button id="btnSave" class="btn btn-primary btn-lg" type="button"><i class="glyphicon glyphicon-save"></i>Save</button>*@
            @*<button type="button" id="btnSave" class=" btn btn-primary btn-flat margin pull-right hvr-bounce-to-right"><i class="glyphicon glyphicon-save"></i> Save</button>*@
            @*<button id="btnView" class="btn btn-primary margin pull-right hvr-bounce-to-right" type="button"><i class="glyphicon glyphicon-search"></i>View</button>*@
            @*<button id="btnDelete" class="btn btn-primary btn-lg" type="button"><i class="glyphicon glyphicon-trash"></i>Delete</button>*@
            <button id="btnReset" class="btn btn-primary btn-lg" type="button"><i class="glyphicon glyphicon-refresh"></i>Reset</button>
            <button id="btnSave" class="btn btn-primary btn-lg" type="button"><i class="glyphicon glyphicon-save"></i>Save</button>
            <button id="btnSearch" class="btn btn-primary btn-lg" type="button"><i class="glyphicon glyphicon-search"></i>Search</button>
        </div>
    </div>
</div>
<div class="box-body">

    <div class="form-group">
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">Invoice No :</div>
            <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                <input type="text" id="CommInvoiceNo" name="CommInvoiceNo" class="form-control RequiredField" placeholder="Invoice No" disabled>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">Invoice Date :</div>
            <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                <input type="text" id="CommInvoiceDate" name="CommInvoiceDate" class="form-control RequiredField date" placeholder="Invoice Date">
            </div>
        </div>

    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">Buyer Name :</div>
            <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                <input type="text" id="BuyerName" name="BuyerName" class="form-control RequiredField" placeholder="Press F9">
                <input type="hidden" id="BuyerCode" name="BuyerCode" class="form-control RequiredField">
            </div>
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">Status :</div>
            <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                <select id="Status" name="Status" class="form-control RequiredField">
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>
            @*<div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">Net Invoice Ammount :</div>
            <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                <input type="text" id="NetInvoiceAmount" name="NetInvoiceAmount" class="form-control RequiredField" placeholder="Net Invoice Ammount">
            </div>*@
        </div>
    </div>
</div>
<div class="panel-body">
    @*<div class="panel-heading" style="font-weight:bold"><u>Select Packing List :</u></div>*@
    <div class="row">
        <div id="MainGrid" class="MainGrid" tabindex="14"></div>
    </div>
</div>

<div style="text-align:right;">
    <button id="btnView" class="btn btn-primary" type="button"><i class="glyphicon glyphicon-search"></i>View</button>
</div>

<div class="panel-body">
    @*<div class="panel-heading" style="font-weight:bold"><u>Product Details: </u></div>*@
    <div class="row">
        <div id="DetailGrid" class="DetailGrid" tabindex="14"></div>
        <label id="" style="margin-left:750px;">Total Amt:</label>
        <input type="text" readonly="readonly" class="txtBox" id="TotalAmtPack" style="width:100px;" />
        <input type="text" readonly="readonly" class="target" id="TotalAmtBDT" style="width:100px;" />
    </div>
</div>


<div id="RemoveConfirmationMainWindow" class="modal" @*style="display:none;"*@>
    @*<div class="modal-header"></div>*@
    <div class="modal-body">
        @*<p>This is a small modal.</p>*@
    </div>
    <div class="modal-footer">
        <input type="button" class="k-button hide-on-narrow" id="btnRemoveConfirmationMainYes" style="width:70px" value="Yes" />
        <input type="button" class="k-button hide-on-narrow" id="btnRemoveConfirmationMainNo" style="width:70px" value="No" />
    </div>
</div>

<div id="RemoveConfirmationDetailWindow" class="modal" @*style="display:none;"*@>
    @*<div class="modal-header"></div>*@
    <div class="modal-body">
        @*<p>This is a small modal.</p>*@
    </div>
    <div class="modal-footer">
        <input type="button" class="k-button hide-on-narrow" id="btnRemoveConfirmationDetailYes" style="width:70px" value="Yes" />
        <input type="button" class="k-button hide-on-narrow" id="btnRemoveConfirmationDetailNo" style="width:70px" value="No" />
    </div>
</div>


<div class="row">
    <div id="PackingPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="PackingPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>

<div class="row">
    <div id="BuyerPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="BuyerPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>

@*<div class="box-body">
        <div id="PageDetailGrid" class="MainGrid" tabindex="14"></div>
    </div>*@
<div class="box-footer"></div>
<div class="row">
    <div id="PopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="PopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>





